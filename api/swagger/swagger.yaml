swagger: "2.0"

info:
  version: "0.0.1"
  title: La Carta app iOS Backend
  description: Backend to host peronal wine list

  termsOfService: https://lacarta.com/termsOfService
  contact:
    name: Caleb Repkes
    url: http://www.calebrepkes.com
    # email: empty@empty.com
  license:
    name: Caleb Repkes
# during dev, should point to your local machine
host: localhost:5001
#host: https://lacarta-backend.herokuapp.com
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/x-www-form-urlencoded
# format of the responses to the client (Accepts)
produces:
  - application/json
  - application/x-www-form-urlencoded
  - text/html
paths:

  /:
    get:
      x-swagger-router-controller: html
      operationId: showIndex
      summary: Show homepage
      description: Show the homepage of La Carta App
      responses:
        "200":
          $ref: '#/responses/StandardSuccessResponse'
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/enrollment:
    post:
      x-swagger-router-controller: session
      operationId: performEnrollment
      summary: Enrollment
      description: Enroll to La Carta App by providing a username and a password.
      parameters:
        - name: RequestEnrollment
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestLogin'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/login:
    post:
      x-swagger-router-controller: session
      operationId: performLogin
      summary: Login
      description: Login to La Carta App by providing a username and a password.
      parameters:
        - name: RequestLogin
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestLogin'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/wine:
    post:
      x-swagger-router-controller: wines
      operationId: performCreateWine
      summary: Create Wine
      description: Add a new wine to La Carta
      parameters:
        - name: RequestCreateWine
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestCreateWine'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/findWines:
    post:
      x-swagger-router-controller: wines
      operationId: performFindWines
      summary: Find all Wines
      description: Find all wines in La Carta
      parameters:
        - name: RequestCreateWine
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestFindWines'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/updateWine:
    post:
      x-swagger-router-controller: wines
      operationId: performUpdateWine
      summary: Update Wine
      description: Update a wine to La Carta
      parameters:
        - name: RequestUpdateWine
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestUpdateWine'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/deleteWine:
    delete:
      x-swagger-router-controller: wines
      operationId: performDeleteWine
      summary: Delete Wine
      description: Delete a Wine by supplying wine_Name, username and token.
      parameters:
        - name: RequestDeleteTask
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestDeleteWine'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/deleteUser:
    delete:
      x-swagger-router-controller: session
      operationId: performDeleteUser
      summary: Delete User
      description: Delete a user by supplying username.
      parameters:
        - name: RequestDeleteUser
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestDeleteUser'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /app/logout:
    post:
      x-swagger-router-controller: session
      operationId: performLogout
      summary: Logout
      description: Delete the session of the user
      parameters:
        - name: RequestLogout
          in: body
          description: Contains the defaults of the request message
          schema:
            $ref: '#/definitions/RequestLogout'
      responses:
        "200":
          $ref: "#/responses/StandardSuccessResponse"
        "404":
          $ref: "#/responses/StandardNotFoundResponse"
        "500":
          $ref: "#/responses/Standard500ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
          
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  StandardSuccess:
    type: object
    properties: 
      service:
        type: string
      message:
        type: string
  RequestBasic:
    type: object
    required:
    - username
    - token
    properties:
      username:
        type: string
      token:
        type: integer
        format: int32
  RequestLogin:
    required:
    - username
    - password
    properties:
      username:
        type: string
        description: Username of user
        example: test@test.com
      password:
        type: string
        description: Password of user
        example: test
  RequestCreateWine:
    description: Create a Wine
    type: object
    required:
    - wine_Name
    - username
    - description
    - colour
    - brew_year
    - quantity
    - token
    properties:
      wine_Name:
        type: string
      username:
        type: string
      description:
        type: string
      colour:
        type: string
      brew_year:
        type: string
      quantity:
        type: string
      token:
        type: integer
        format: int32
  RequestUpdateWine:
    description: Update a Wine
    type: object
    required:
    - wineId
    - wine_Name
    - username
    - description
    - colour
    - brew_year
    - quantity
    - token
    properties:
      wineId:
        type: string
      wine_Name:
        type: string
      username:
        type: string
      description:
        type: string
      colour:
        type: string
      brew_year:
        type: string
      quantity:
        type: string
      token:
        type: integer
        format: int32
  RequestFindWines:
    $ref: "#/definitions/RequestBasic"
  RequestDeleteWine:
    type: object
    required:
    - username
    - wine_Name
    - token
    properties:
      username:
        type: string
      wine_Name:
        type: string
      token:
        type: integer
        format: int32
  RequestLogout:
    type: object
    required:
    - token
    properties:
      token:
        type: string
  RequestDeleteUser:
    type: object
    required:
    - username
    properties:
      username:
        type: string
#  LoginResponse:
#    type: object
#    properties:
#      token:
#        type: string
# complex routes have response definitions which can be re-used
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured
    schema:
      $ref: "#/definitions/Error"
  StandardNotFoundResponse:
    description: Record not found error
    schema:
      $ref: "#/definitions/Error"
  StandardSuccessResponse:
    description: A successfull response
    schema:
      $ref: "#/definitions/StandardSuccess"